buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:2.1.0'
    classpath 'com.stanfy.helium:gradle-plugin:0.8.3-SNAPSHOT'
  }
}

apply plugin: 'com.android.application'
apply plugin: 'helium-android'

android {
  compileSdkVersion 21
  buildToolsVersion "23.0.1"

  defaultConfig {
    minSdkVersion 14
    targetSdkVersion 21
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  lintOptions {
    ignore 'IconMissingDensityFolder', 'GoogleAppIndexingWarning', 'SetTextI18n'
  }
}

repositories {
  mavenCentral()
}

dependencies {
  compile 'com.google.code.gson:gson:2.4'
  compile 'com.squareup.retrofit:retrofit:1.9.0'
}

// import some classes to be able to customize source generation
import javax.lang.model.element.Modifier
import static com.stanfy.helium.handler.codegen.java.entity.Writers.*
import com.stanfy.helium.handler.codegen.java.constants.ConstantNameConverter
import static com.stanfy.helium.handler.codegen.java.ClassAncestors.*

helium {
  specification file('src/api/twitter.api')

  sourceGen {
    def sourceOut = file("$buildDir/source")

    // generate entity classes based on messages defined in the spec
    entities {

      options {
        packageName = "com.stanfy.helium.sample.api"

        // replace some_field with someField
        prettifyNames = true

        // make fields be private
        fieldModifiers = [Modifier.PRIVATE] as Set

        // and generate accessor
        addGetters = true
        addSetters = true

        // add more code to POJOs
        writerWrapper = chain(
            // @SerializedName annotation for Gson
            gson(),
            // implement Parcelable
            androidParcelable()
        )

        // map custom types to Java classes
        customPrimitivesMapping = [
            timestamp: "java.util.Date",
            CustomType: "com.stanfy.helium.sample.android.CustomType<String>"
        ]

        // Add custom inheritance mapping for generated entities.
        customParentMapping = [
          Base: extending("com.stanfy.helium.sample.android.BaseModel")
        ]
        // Force using Java arrays instead of collections for sequences:
        // currently the only option supported by androidParcelable() feature.
        useArraysForSequences()

        // Without making entities implement Parcelable, it's possible to customize
        // collection class used for representing sequences.
        // sequenceCollectionName = 'java.util.ArrayList'
      }
    }

    // generate constants from field names: may be useful for injecting SQL-code e.g.
    constants {

      // customize output directory
      output = file("$sourceOut/constants")

      options {
        packageName = "com.stanfy.helium.sample.constants"

        // process only User type
        include << 'User'

        // customize how constant name is built (constant value is equal to field name)
        nameConverter = {
          // 'it' is an instance of com.stanfy.helium.model.Field
          "COLUMN_${it.canonicalName.toUpperCase(Locale.US)}".toString()
        } as ConstantNameConverter
      }
    }

    // generate Retofit interface
    retrofit {
      options {
        packageName = "com.stanfy.helium.sample.api"
      }
    }

  }
}

afterEvaluate {
  // verify tasks are accessible: just to test
  assert helium.sourceGen.entities != null
  assert helium.sourceGen.constants != null
  assert helium.sourceGen.retrofit != null
}
